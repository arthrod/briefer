apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: '{{ .Release.Namespace }}'
  name: briefer-jupyter
  labels:
    app.kubernetes.io/name: briefer
    app.kubernetes.io/component: jupyter
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: briefer
      app.kubernetes.io/component: jupyter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: briefer
        app.kubernetes.io/component: jupyter
    spec:
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: jupyter
        image: '{{ .Values.jupyter.image.repository }}/{{ .Values.jupyter.image.name }}:{{ .Values.jupyter.image.tag }}'
        command: ["sh", "-c", "jupyter server --ip=0.0.0.0 --ZMQChannelsWebsocketConnection.iopub_data_rate_limit=1.0e10 --ZMQChannelsWebsocketConnection.iopub_msg_rate_limit=1.0e6 --ServerApp.max_body_size=107374182400"]
        {{- if .Values.jupyter.resources }}
        resources:
          {{- with .Values.jupyter.resources.requests }}
          requests:
            {{- if .memory }}
            memory: {{ .memory | quote }}
            {{- end }}
            {{- if .cpu }}
            cpu: {{ .cpu | quote }}
            {{- end }}
          {{- end }}
          {{- with .Values.jupyter.resources.limits }}
          limits:
            {{- if .memory }}
            memory: {{ .memory | quote }}
            {{- end }}
            {{- if .cpu }}
            cpu: {{ .cpu | quote }}
            {{- end }}
          {{- end }}
        {{- end }}
        livenessProbe:
          httpGet:
            path: /api
            port: 8888
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 5
          timeoutSeconds: 10
        env:
        - name: JUPYTER_TOKEN
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: jupyterToken
        ports:
        - containerPort: 8888
          name: jupyter-port
  volumeClaimTemplates:
  - metadata:
      name: jupyter-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "{{ .Values.jupyter.storageClassName | default "standard" }}"
      resources:
        requests:
          storage: "{{ .Values.jupyter.storageSize | default "16Gi" }}"
